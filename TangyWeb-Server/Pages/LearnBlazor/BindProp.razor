@page "/learnBlazor/bindProd"
@using Tangy_Model.LearnBlazorModels

<h2 class="text-success">Individual Product</h2>

<div class="row">

    @*bind-value could make two way data binding*@
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product playground</h3><hr />

        <div>
            Active:
            <input type="checkbox" @bind-value="Product.IsActive" checked="@(Product.IsActive?"checked":null)">
            <br />
        </div>
        <div>
            Price:
            <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput">
            <br />
        </div>
        <div>
            Product Properties:
            <select @bind="selectedProp">
                @foreach (var prop in Product.ProductProperties)
                {
                    <option value="@prop.Key">@prop.Key</option>
                }
            </select>
        </div>


    </div>



    <div class="col-6 border" p-2>
        @*one way data binding*@

        <h3 class="text-primary">Product Summary</h3><hr />


        Name:@Product.Name<br />
        Active:@Product.IsActive<br />

        Price: @Product.Price<br />

        This product is :@(Product.IsActive?"Active":"InActive")<br />
        Property selected:@selectedProp<br />

        @if (!String.IsNullOrWhiteSpace(selectedProp))
        {
            <p>Property Value : @Product.ProductProperties.FirstOrDefault(u => u.Key == selectedProp).Value</p>
        }

    </div>
    
    <br />
    <div class="col-12" pt-4>
        <h2 class="text-success">Product Table</h2>
        <table class ="table table-striped">
            <tbody>
                @foreach (var prod in Products) {

                        <tr>

                            <td>

                                <input type="text" @bind-value="prod.Name" @bind-value:event="oninput" />
                            </td>
                            <td>

                                <input type="text" @bind-value="prod.Price" @bind-value:event="oninput" />
                            </td>

                            <td>

                                <input type="checkbox" @bind-value="prod.IsActive" checked="@(prod.IsActive?"checked":null)"/>
                            </td>
                        </tr>
                    }
            </tbody>


        </table>

        <h2>Product summary</h2>
        @foreach (var prod in Products)

            {
                <p>@prod.Name [@prod.Price] is @(prod.IsActive?"Active":"InActive"))</p>




         }



    </div>




</div>











@code {
    //all c# code in here

    private string selectedProp = "";

    @*create product object*@

    Demo_Product Product = new()

    {
        Id = 1,
        Name = "Rose Cancel",
        IsActive = true,
        Price = 10.99,

        ProductProperties = new List<Tangy_Model.LearnBlazorModels.Demo_ProductProp>()

{
            new Demo_ProductProp{ id=1,Key="Color",Value="Black"},
            new Demo_ProductProp{ id=2,Key="Flavor",Value="Rose Jasmine"},
            new Demo_ProductProp{ id=3,Key="Size",Value="20oz"},

        }


    };


    List<Demo_Product> Products = new();

    //this methods is ready when component is ready to start
    protected override void OnInitialized()
    {
        Products.Add(new()
        {

            Id = 1,
            Name = "Midnight Blaze",
            IsActive = false,
            Price = 10.99,
            ProductProperties = new()
            {
                new Demo_ProductProp{ id = 1, Key="Flavor",Value="Rose"},
                new Demo_ProductProp{ id = 2, Key="Size",Value="20oz"},
                new Demo_ProductProp{ id = 3, Key="Color",Value="Purple"},


            }



        });

        Products.Add(new()
        {

            Id = 2,
            Name = "Blossom Lily",
            IsActive = false,
            Price = 13.99,
            ProductProperties = new()
            {
                new Demo_ProductProp{ id = 1, Key="Flavor",Value="Lily"},
                new Demo_ProductProp{ id = 2, Key="Size",Value="18oz"},
                new Demo_ProductProp{ id = 3, Key="Color",Value="White"},


            }



        });


    }


    }

